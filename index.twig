<!DOCTYPE html>
<html class="cdpf home {{ htmlClasses }}" data-detection="{{ htmlClasses }}">
	<head>
		<title>CDPF</title>
        <link href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/ui-darkness/jquery-ui.css" rel="stylesheet" type="text/css" />
		<style>
			@import url(style.css?ts={{ filetimestamp("style.css") }});
            {% if customCSS %}
            @import url({{ customCSS }});
            {% endif %}
		</style>
        <meta name="viewport" content="width=device-width">
		<link rel="icon" href="favicon.png" type="image/x-icon">
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
        <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js"></script>
        <script src="lib/jquery.lazyload.min.js"></script>
        <script src="lib/jquery.autosize.min.js"></script>
        <script src="lib/jquery.upload-1.0.2.min.js"></script>
        {% include 'lib/mobile-rotation-script.twig' %}
        {% if googleAnalyticsID is defined %}
            {% include 'lib/analytics.twig' %}
        {% endif %}
	</head>
	<body>
		<script>

            function parseQueryString(querystring) {
                // remove any preceding url and split
                querystring = querystring.substring(querystring.indexOf('?')+1).split('&');
                var params = {}, pair, d = decodeURIComponent;
                // march and parse
                for (var i = querystring[0] ? querystring.length - 1 : -1; i >= 0; i--) {
                    pair = querystring[i].split('=');
                    params[d(pair[0])] = pair[1]===undefined ? pair[1] : d(pair[1]);
                }
                return params;
            }

            function makeQueryString(params) {
                var p = [];
                $.each(params,function(n,v){
                    p.push(v===undefined ? encodeURIComponent(n) : encodeURIComponent(n) + '=' + encodeURIComponent(v.toString()));
                })
                return p.join('&');
            }

            function decacheUrl(url) {
                var params, parts = (url||'').split('?');
                params = parts.length>1 ? parseQueryString(parts[1]) : {};
                params.ts = $.now();
                return parts[0] + '?' + makeQueryString(params);
            }

            function displayPageMessage(stuff) {
                var msg = $('#message');
                $('.container',msg).html(stuff);
                if (!msg.is(':visible')) {
                    msg.slideDown();
                }
            }

            $('body').on('click','button.delete',function(e){
                var answer = confirm("Are you sure you want to delete this photo?");
                var button = $(this).hide();
                $.ajax({
                    data: {
                        'delete-image': 1
                        ,name: button.closest('.row').attr('data-image')
                        {% if verbose %} ,verbose:1 {% endif %}
                    },
                    url: '?',
                    type: 'POST',
                    success: function(data) {
                        button.closest('.row').slideUp()
                            .closest('.section').prepend($('<div class="row-message">').append(data));
                    },
                    error: function(xhr, b, c) {
                        if (xhr.status===401) {
                            document.location.href = '/';
                            return;
                        }
                        console.log('Error: %o %o %o', xhr, b, c);
                        displayPageMessage("Error deleting image, try again later.")
                    }
                });
                return false;
            });

            $('body').on('click','button.crop',function(e){
                if ($(this).is(':visible')) {
                    var button = $(this).hide();
                    var name = button.attr('data-image');
                    $.ajax({
                        data: {
                            crop: 1
                            ,name: name
                            ,pos: 'center'
                            {% if verbose %} ,verbose:1 {% endif %}
                        },
                        url: '?',
                        type: 'POST',
                        success: function(data) {
                            var img = button.closest('.row').find('img.thumbnail');
                            var url = decacheUrl(img.prop('src'));
                            img.attr('src',url);
                            button.closest('.row').removeClass('show-crop');
                            button.data('undo',data).text('Undo Crop').removeClass('crop').addClass('undo').show();
                        },
                        error: function(xhr, b, c) {
                            if (xhr.status===401) {
                                document.location.href = '/';
                                return;
                            }
                            console.log('Error: %o %o %o', xhr, b, c);
                            alert('There was an error cropping your photo, please tray again later.');
                        }
                    });
                }
            });

            $('body').on('click','button.undo',function(e) {
                var button = $(this);
                var undoInfo = $(this).data('undo');
                var deleteUndo = button.is('.undo-delete');
                if (undoInfo && $(this).is(':visible')) {
                    button.hide();
                    $.ajax({
                        data: {
                            undo: deleteUndo ? 'delete' : 'crop'
                            ,info: undoInfo
                            {% if verbose %} ,verbose:1 {% endif %}
                        },
                        url: '?',
                        type: "POST",
                        success: function(data) {
                            if (deleteUndo) {
                                var section = button.closest('.section');
                                $('.row-message', section).slideUp();
                                $('.row', section).slideDown();
                                $('.delete', section).show();
                            } else {
                                var img = button.closest('.row').find('img.thumbnail');
                                var url = decacheUrl(img.prop('src'));
                                img.attr('src',url);
                                var label = button.text()==="Undo Crop" ? "Redo Crop" : "Undo Crop";
                                button.data('undo',data).text(label).removeClass('crop').addClass('undo').show();
                            }
                        },
                        error: function(xhr, b, c) {
                            if (xhr.status===401) {
                                document.location.href = '/';
                                return;
                            }
                            console.log('Error: %o %o %o',xhr, b, c);
                            alert('There was an error undoing the crop of your photo, please tray again later.');
                        }
                    });
                }
            });

            $('body').on('click','button.rotate',function(e){
                var button = $(this);
                var dir = button.attr('data-dir');
                var name = button.attr('data-image');
                $.ajax({
                    data: {
                        rotate: 1,
                        type: "POST",
                        dir: dir,
                        name: name
                        {% if verbose %} ,verbose:1 {% endif %}
                    },
                    url: '?',
                    success: function(data) {
                        var section = button.closest('.section');
                        $('.cropper', section).remove();
                        $('.container',section).prepend($(data).find('.cropper'));
                        var img = $('img.thumbnail', section);
                        var url = decacheUrl(img.attr('src'));
                        img.attr('src',url);
                    },
                    error: function(xhr, b, c) {
                        if (xhr.status===401) {
                            document.location.href = '/';
                            return;
                        }
                        console.log('Error: %o %o %o', a, b, c);
                        alert('There was an error rotating your photo, please tray again later.');
                    }
                })
            });

            function endEdit(row,save) {
                if (save===true) {
                    var edit = row.find('button.edit');
                    var textarea = row.find('textarea.caption');
                    var newCaption = textarea.length ? textarea.val() : edit.attr('data-pending');
                    var captionDiv = row.find('div.caption');
                    var image = edit.attr('data-image');
                    captionDiv.effect( "pulsate", {times:10}, 10000, function(){
                        edit.removeAttr('data-pending');
                        var answer = confirm('Error saving caption, try again?');
                        if (answer) {
                            endEdit(row,true);
                        }
                    });
                    edit.attr('data-pending',newCaption);
                    $.ajax({
                        url: '?',
                        type: "POST",
                        data: {
                            save: "1"
                            ,caption: newCaption
                            ,image: image
                            {% if verbose %} ,verbose:1 {% endif %}
                        },
                        success: function(data) {
                            edit.removeAttr('data-pending');
                            captionDiv.finish().fadeOut().text(data).fadeIn().effect("highlight");
                            edit.attr('data-caption',newCaption);
                        },
                        error: function(xhr, b, c) {
                            if (xhr.status===401) {
                                document.location.href = '/';
                                return;
                            }
                            console.log('Error: %o %o %o', xhr, b, c);
                            edit.removeAttr('data-pending');
                            captionDiv.finish();
                            var answer = confirm('Error saving caption, try again?');
                            if (answer) {
                                endEdit(row,true);
                            }
                        }
                    });
                }
                row.find('form.caption-edit').remove();
                $('#cover').hide();
                return false;
            }

            function startEdit(row) {
                row.find('.container').css('z-index','auto');
                var div = row.find('div.caption');
                div.closest('.container').css('z-index',10500);
                var form = $('<form class="caption-edit">').insertAfter(div);
                var textarea = $('<textarea class="caption">').css({
                    'font-family': div.css('font-family'),
                    'font-style': div.css('font-style'),
                    'font-size': div.css('font-size'),
                    'text-align': div.css('text-align'),
                    'height':22,
                    'width': 'calc( 100% - 4px)'
                }).appendTo(form).autosize().val(row.find('button.edit').attr('data-caption')).trigger('autosize.resize');
                $('<div class="controls"><button class="cancel">Cancel</button> <button type="submit" class="save">Save</button></div>')
                .appendTo(form);
                textarea.trigger('focus');
                $('#cover').show();
                return false;
            }

            $('body').on('click','button.edit, div.caption',function(e){
                var row = $(this).closest('.row');
                if (row.find('button.edit').attr('data-pending')) {
                    alert('Save pending, try again later.');
                    return false;
                }
                return startEdit(row);
            });

            $('body').on('click','button.cancel',function(e){
                return endEdit($(this).closest('.row'),false);
            });

            $('body').on('click','button.save',function(e){
                return endEdit($(this).closest('.row'),true);
            }).on('submit','form.caption-edit',function(e){
                return endEdit($(this).closest('.row'),true);
            });

            function initAlbum(album) {
            }

            $(document).on('click','.albumButton',function(){
                $('.albumButton.selected').removeClass('selected');
                var album = $(this).addClass('selected').attr('data-album-num');
                $('#album'+album).show().siblings().hide();
                $('input[name=the-album]').val(album);
                localStorage.selectedAlbum = album;
                return false;
            });

			$(function(){
				if (localStorage!==undefined) {
					if (localStorage.selectedAlbum!==undefined) {
						var albumButton = $('.albumButton[data-album-num='+localStorage.selectedAlbum.replace(/\D/g,'')+']');
						albumButton.click();
					}
				} else {
					localStorage = { selectedAlbum: {{ albumSelected }} };
				}
			});
        </script>

        <div class='title'>
            <div id="pallet">
                <form id='logout' method='post'>
                    <input id='logouter' type='submit' name='logout' value='Logout'/>
                    {% if verbose %}
                        <input type="hidden" name="verbose" value="1"/>
                    {% endif %}
                </form>
            </div>
            {% if ip %}
            <div id="remote">
                <a href="http://{{ ip }}"/>
                    <img />
                </a>
            </div>
            <script>
                var remoteTimer = setTimeout(function(){
                    console.log('timer');
                    var img = $('#remote img');
                    if (img.naturalWidth) {
                        $('#remote').css('height',this.naturalHeight).css('width',this.naturalWidth);
                    } else {
                        $('#remote').remove();
                    }
                },2500);
                $('#remote img').on('load',function(){
                    console.log('load');
                    clearTimeout(remoteTimer);
                    $('#remote').css('height',this.naturalHeight).css('width',this.naturalWidth);
                }).on('error',function(){
                    console.log('error');
                    clearTimeout(remoteTimer);
                    $('#remote').remove();
                }).attr('src','http://{{ ip }}/remote.png');
            </script>
            {% endif %}
        </div>

        <div id='upload'>
            <div class='subtitle'>{{ title|e }}</div>
            <div id="uploadArea">
                <div id="uploadForm">
                    <form method="post" enctype="multipart/form-data" id="file-picker-form">
                        <input type="file" name="the-file" id="the-file" multiple="multiple">
                    </form>
                    <form method="post" enctype="multipart/form-data" id="upload-form">
                        <input type="hidden" name="the-album" value="{{ albumSelected }}"/>
                        {% if verbose %}
                            <input type="hidden" name="verbose" value="1"/>
                        {% endif %}
                        <input type="hidden" name="upload-submit" value="1"/>
                    </form>
                </div>
                <div id="uploadProgress">
                    <img src="busy.gif" style="zoom: 33%;"/>
                </div>
            </div>
        </div>

        <div id='message' style="{% if message %}display:block;{% endif %}">
            <div class="container">
                {{  message|e }}
            </div>
        </div>

        {% if albumCount>1 %}
            <div class='albums'>
                {% for i in range( 1 , albumCount ) %}
                <div class="albumButton {% if albumSelected == i %}selected{% endif %}" data-album-num="{{ i }}" >
                    {% if albumNames[i-1] is defined %}
                        {{ albumNames[i-1] }}
                    {% else %}
                        {{ i }}
                    {% endif %}
                </div>
                {% endfor %}
            </div>
        {% endif %}

        <div id='photos'>
        {% for i in range(1,albumCount) %}
            <div class='album' id="album{{  i  }}" {% if albumSelected != i %}style='display: none;'{% endif %} >
                {% if albumCount>1 or albumNames[0] is defined %}
                    <div class='subtitle'>
                        {% if albumNames[i-1] is defined %}
                            {{ albumNames[i-1] }}
                        {% else %}
                            {{ i }}
                        {% endif %}
                    </div>
                {% endif %}

                {% for item in images[i] %}
                    {% include "image.twig" %}
                {% else %}
                    <div class='message no-photos'>No photos to display {{ i }}</div>
                {% endfor %}
            </div>
		{% endfor %}
        </div>

        <div id="config">
        </div>

		<div id='footer'>
			<form id='logout' method='post'>
				<input type='submit' name='logout' value='Logout'/>
                {% if verbose %}
                    <input type="hidden" name="verbose" value="1"/>
                {% endif %}
			</form>
		</div>

        <div id="cover"></div>
	</body>
	<script>
        $('.lazy').lazyload({effect : "fadeIn"})
	</script>
    {% if customJS %}
        <script src="{{ customJS }}"></script>
    {% endif %}
    <script src="home.js?ts={{ filetimestamp("home.js") }}"></script>
    <script type="text/javascript">
        $('#the-file').on('change', function() {
            if (!!FormData) {
                var input = $('#the-file');
                var form = $('#upload-form')[0];
                var files = input.prop('files');
                var msgs = $('<div>');
                for(var pos=0; pos < files.length; pos++) {
                    var data = new FormData(form);
                    data.append("the-file", files[pos]);
                    $.ajax({
                        url: form.action || "?",   // Url to which the request is send
                        type: "POST",              // Type of request to be send, called as method
                        data: data,                // Data sent to server, a set of key/value pairs (i.e. form fields and values)
                        contentType: false,        // The content type used when sending data to the server.
                        cache: false,              // To unable request pages to be cached
                        processData: false,        //nd DOMDocument or non processed data file it is set to false
                        success: function(data) {  // A function to be called if request succeeds
                            console.log(data);
                            var html = $(data);
                            var message = html.find('.ajax-message').text();
                            msgs.append($('<div>').text(message));
                            displayPageMessage(msgs);
                            $('.album:visible').prepend(html);
                        },
                        error: function(xhr, b, c) {
                            if (xhr.status===401) {
                                document.location.href = '/';
                                return;
                            }
                            displayPageMessage("Error uploading photos, try again later");
                            console.log('Error: %o %o %o', xhr, b, c);
                        }
                    });
                }
                input.val('');
            } else {
                $(this).upload2(
                    '/',
                    {
                        "the-album": $('input[name=the-album]').val(),
                        "upload-submit" : 1
                    },
                    function(event,data) {
                        if (event==="start") {
                            $('#uploadArea').addClass('uploading');
                        } else {
                            $('#uploadArea').removeClass('uploading');
                            var html = $(data);
                            var message = html.find('.ajax-message').text();
                            displayPageMessage(message || "Upload complete");
                            html.find('.ajax-message').remove();
                            $('.album:visible').prepend(html);
                            $('.no-photos').remove();
                        }
                    },
                    'html'
                );
            }
        });
        $('#photos').on('mouseover mouseout', '.crop', function(evt){
            $(this).closest('.row').toggleClass('show-crop',evt.type==="mouseover");
        });
    </script>

</html>
